# this specifies that there is a WSGI server running on port 5000
upstream airbnb-onepage_server {
     server localhost:5000 fail_timeout=0;
}

upstream number_odd_or_even_server {
     server localhost:5001 fail_timeout=0;
}

upstream api_server {
     server localhost:5002 fail_timeout=0;
}


# Default server configuration
# nginx is set up to run on the standard HTTP port (80) and listen for request
# It also permanently redirect when resource has been move and shows error when
# resource is not found or wrong url
server {
	listen 80 default_server;
	listen [::]:80 default_server;
	rewrite /redirect_me https://michaeldecent.tech permanent;


	#Let the http header include the hostname using HOSTNAME variable
	add_header X-Served-By $HOSTNAME;

	#default path to start searching for files
	root /var/www/html;

	# Add index.php to the list if you are using PHP
	index index.html index.htm index.nginx-debian.html;

	server_name _;

	# nginx should serve up static files and never send to the WSGI server
	# use default root path to search for files
	location / {
		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
		try_files $uri $uri/ =404;
	}
	
	# Another path to start static files using path specifiled in alias
	location /hbnb_static/ {
		alias /data/web_static/current/;
		autoindex off;
	}

	# requests that do not fall under /, /hbnb_static/ and /layomi/ are passed on to the WSGI
	#server that was specified above running on port 5000
	location /airbnb-onepage/ {
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header Host $http_host;
		proxy_redirect off;

		if (!-f $request_filename) {
      			proxy_pass http://airbnb-onepage_server;
     		 	break;
    		}
	}
	
	location ~ /number_odd_or_even/(\d+) {
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header Host $http_host;
                proxy_redirect off;

                if (!-f $request_filename) {
                        proxy_pass http://number_odd_or_even_server/number_odd_or_even/$1;
                        break;
                }
        }

	location /api/ {
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header Host $http_host;
                proxy_redirect off;

                if (!-f $request_filename) {
                        proxy_pass http://api_server;
                        break;
                }
        }


}
